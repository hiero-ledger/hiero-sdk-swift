version: "3"

silent: true

tasks:
    build:
        cmds:
            - |
                echo "// SPDX-License-Identifier: Apache-2.0
                public enum VersionInfo {
                    public static let version = \"$(git describe --tags)\"
                }" > Sources/Hiero/Version.swift
            - swift build

    format:
        cmds:
            - swift format --configuration .swift-format.json --recursive --in-place --parallel Sources/ Tests/ Examples/ Package.swift

    lint:
        cmds:
            - cmd: swiftlint --quiet
              ignore_error: true
            - swift format lint --configuration .swift-format.json --recursive --parallel Sources/ Tests/ Examples/ Package.swift

    package:
        desc: "Build package"
        cmds:
            - |
                echo "// SPDX-License-Identifier: Apache-2.0
                public enum VersionInfo {
                    public static let version = \"$(git describe --tags)\"
                }" > Sources/Hiero/Version.swift
            - swift build -c release

    example:
        desc: "Run example"
        cmds:
            - swift run {{.name}}Example

    submodule:fetch:
        desc: "Fetch a specific version of the submodule, or else the latest version. E.g. task submodule:fetch proto=vX.Y.Z"
        dir: protobufs
        vars:
            latest_tag:
                sh: >
                    git tag -l --sort=version:refname | 
                    grep -v 'alpha\|beta\|rc' |
                    tail -1
            proto: "{{.proto | default .latest_tag}}"
            current_version:
                sh: git describe --tags
        cmds:
            - echo "Protobuf version set to {{.proto}}"
            - |
                if [ "{{.current_version}}" = "{{.proto}}" ]; then
                    echo "Warning: Already at version {{.proto}}, skipping update"
                    exit 0
                fi
            - git fetch origin
            - git checkout {{.proto}}
            - git show-ref --verify -q refs/heads/{{.proto}} && git pull origin || exit 0
            - cd ..
            - task: submodule:generate
            - task: build
            - echo "Successfully updated protobufs to {{.proto}}"

    submodule:generate:
        desc: "Generate the swift files from the protobufs"
        dir: Sources/HieroProtobufs
        cmds:
            - cmd: python3 update_protos.py

