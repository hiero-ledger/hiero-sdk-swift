// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: services/auxiliary/hints/hints_partial_signature.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

///*
/// # hinTS Partial Signature Transaction
///
/// ### Keywords
/// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
/// "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
/// document are to be interpreted as described in
/// [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
/// [RFC8174](https://www.ietf.org/rfc/rfc8174).

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

///*
/// A transaction body to publish a node's hinTS partial signature on
/// a particular message for a certain construction id.
public struct Com_Hedera_Hapi_Services_Auxiliary_Hints_HintsPartialSignatureTransactionBody: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  ///*
  /// The id of the hinTS construction this partial signature applies to.
  /// (The size of the target roster for this construction implies what
  /// hinTS party id the submitting node has in the construction; and
  /// hence also what weight the node's signature has.)
  public var constructionID: UInt64 = 0

  ///*
  /// The message being signed.
  public var message: Data = Data()

  ///*
  /// The node's partial signature on the message.
  public var partialSignature: Data = Data()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "com.hedera.hapi.services.auxiliary.hints"

extension Com_Hedera_Hapi_Services_Auxiliary_Hints_HintsPartialSignatureTransactionBody: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".HintsPartialSignatureTransactionBody"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "construction_id"),
    2: .same(proto: "message"),
    3: .standard(proto: "partial_signature"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularUInt64Field(value: &self.constructionID) }()
      case 2: try { try decoder.decodeSingularBytesField(value: &self.message) }()
      case 3: try { try decoder.decodeSingularBytesField(value: &self.partialSignature) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.constructionID != 0 {
      try visitor.visitSingularUInt64Field(value: self.constructionID, fieldNumber: 1)
    }
    if !self.message.isEmpty {
      try visitor.visitSingularBytesField(value: self.message, fieldNumber: 2)
    }
    if !self.partialSignature.isEmpty {
      try visitor.visitSingularBytesField(value: self.partialSignature, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Com_Hedera_Hapi_Services_Auxiliary_Hints_HintsPartialSignatureTransactionBody, rhs: Com_Hedera_Hapi_Services_Auxiliary_Hints_HintsPartialSignatureTransactionBody) -> Bool {
    if lhs.constructionID != rhs.constructionID {return false}
    if lhs.message != rhs.message {return false}
    if lhs.partialSignature != rhs.partialSignature {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
